class Solution {
public:
    vector<int> sortEvenOdd(vector<int>& nums) {
        int size=nums.size();
        if(size==2){
            return nums;
        }
        for(int i=0;i<size;i++){
            for(int j=i+1;j<size;j++){
                if(i%2==0 && j%2==0){
                    if(nums[i]>nums[j]){
                        int temp=nums[i];
                        nums[i]=nums[j];
                        nums[j]=temp;
                    }
                }
                if(i%2!=0 && j%2!=0){
                    if(nums[i]<nums[j]){
                        int temp=nums[i];
                        nums[i]=nums[j];
                        nums[j]=temp;
                    }
                }
            }
        }
        
        return nums;
    }
};


Input: nums = [4,1,2,3]
Output: [2,3,4,1]
Explanation: 
First, we sort the values present at odd indices (1 and 3) in non-increasing order.
So, nums changes from [4,1,2,3] to [4,3,2,1].
Next, we sort the values present at even indices (0 and 2) in non-decreasing order.
So, nums changes from [4,1,2,3] to [2,3,4,1].
Thus, the array formed after rearranging the values is [2,3,4,1].
